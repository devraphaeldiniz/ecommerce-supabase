name: Deploy to Supabase

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Instalar Supabase CLI
        run: |
          npm install -g supabase@latest
          supabase --version

      - name: Configurar Supabase
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

      - name: Aplicar Migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          supabase db push

      - name: Deploy Edge Functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase functions deploy send-order-email --no-verify-jwt --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
          supabase functions deploy export-order-csv --no-verify-jwt --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

      - name: Configurar Secrets das Functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase secrets set \
            SENDGRID_API_KEY="${{ secrets.SENDGRID_API_KEY }}" \
            FROM_EMAIL="${{ secrets.FROM_EMAIL }}" \
            SITE_URL="${{ secrets.SITE_URL }}" \
            --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

      - name: Sucesso
        run: |
          echo "✅ Deploy concluído!"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"